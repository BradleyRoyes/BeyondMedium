"use client"

import { useState, useEffect } from "react"
import { useTheme } from "next-themes"

export function ThemeToggle() {
  const { theme, setTheme } = useTheme()
  const [mounted, setMounted] = useState(false)

  // When mounted on client, we can show the UI
  useEffect(() => setMounted(true), [])

  if (!mounted) {
    return null
  }

  const toggleTheme = () => {
    if (theme === 'light') {
      setTheme('dark')
    } else if (theme === 'dark') {
      setTheme('system')
    } else {
      setTheme('light')
    }
  }

  return (
    <button
      onClick={toggleTheme}
      className="fixed bottom-6 right-6 z-50 rounded-full bg-zinc-900 p-3 text-white dark:bg-white dark:text-zinc-900 transition-all duration-300 shadow-lg hover:scale-110"
      aria-label="Toggle theme"
    >
      {theme === 'light' && (
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M21.5287 15.9294C20.7574 15.6885 20.0475 15.3036 19.4087 14.8039C18.0958 13.8085 17.1373 12.3873 16.6947 10.7683C16.2521 9.1494 16.3517 7.41708 16.9784 5.86618C17.0539 5.69553 17.0539 5.50733 16.9784 5.33667C16.9028 5.16602 16.7578 5.02941 16.578 4.95947C16.3981 4.88953 16.1975 4.88953 16.0177 4.95947C15.8378 5.02941 15.6928 5.16602 15.6173 5.33667C15.0446 6.75899 14.0268 7.93855 12.7269 8.72272C11.427 9.50689 9.91028 9.85387 8.40741 9.71169C6.90454 9.56951 5.49083 8.94553 4.40111 7.94073C3.3114 6.93593 2.60417 5.6011 2.3931 4.14741C2.35759 3.96916 2.25167 3.81208 2.09975 3.70882C1.94782 3.60556 1.76097 3.56395 1.57904 3.59339C1.3971 3.62283 1.23437 3.72164 1.12455 3.86931C1.01472 4.01698 0.966025 4.20296 0.993559 4.38581C1.24414 6.18611 2.01745 7.86143 3.20643 9.20385C4.39541 10.5463 5.94639 11.4906 7.67531 11.9253C9.40423 12.36 11.2237 12.2669 12.8983 11.6575C14.5729 11.048 16.0213 9.94951 17.0451 8.49269C17.0004 8.94096 16.9877 9.39226 17.0072 9.84269C17.08 11.7021 17.82 13.466 19.1044 14.8376C19.8412 15.5942 20.7333 16.1823 21.7206 16.5613C21.9032 16.6298 22.1044 16.6298 22.287 16.5613C22.4696 16.4927 22.6177 16.36 22.7006 16.1892C22.7834 16.0183 22.7957 15.8217 22.7348 15.6415C22.674 15.4613 22.5447 15.3109 22.3758 15.2205C22.0676 15.0602 21.7835 14.8671 21.5287 14.6454V15.9294Z" fill="currentColor"/>
        </svg>
      )}
      {theme === 'dark' && (
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M12 16.5C11.0059 16.5 10.0533 16.1182 9.34835 15.4332C8.64344 14.7483 8.25 13.8154 8.25 12.842C8.25 11.8686 8.64344 10.9357 9.34835 10.2508C10.0533 9.56583 11.0059 9.18405 12 9.18405C12.9941 9.18405 13.9467 9.56583 14.6517 10.2508C15.3566 10.9357 15.75 11.8686 15.75 12.842C15.75 13.8154 15.3566 14.7483 14.6517 15.4332C13.9467 16.1182 12.9941 16.5 12 16.5Z" fill="currentColor"/>
          <path fillRule="evenodd" clipRule="evenodd" d="M12 4.36806C12.2652 4.36806 12.5196 4.47092 12.7071 4.65329C12.8946 4.83565 13 5.08464 13 5.34352V6.31787C13 6.57674 12.8946 6.82573 12.7071 7.0081C12.5196 7.19046 12.2652 7.29332 12 7.29332C11.7348 7.29332 11.4804 7.19046 11.2929 7.0081C11.1054 6.82573 11 6.57674 11 6.31787V5.34352C11 5.08464 11.1054 4.83565 11.2929 4.65329C11.4804 4.47092 11.7348 4.36806 12 4.36806ZM17.7735 7.19477C17.9609 7.37741 18.0662 7.62665 18.0662 7.88576C18.0662 8.14487 17.9609 8.39411 17.7735 8.57675L17.0605 9.27724C16.9688 9.36713 16.8599 9.43814 16.7396 9.48644C16.6193 9.53474 16.4897 9.55939 16.359 9.55909C16.227 9.5624 16.0956 9.5397 15.9735 9.49276C15.8514 9.44582 15.7412 9.37578 15.6484 9.28642C15.5557 9.19706 15.4824 9.09021 15.4329 8.97197C15.3835 8.85373 15.359 8.72627 15.3605 8.59827C15.3602 8.47143 15.3863 8.34585 15.4373 8.22952C15.4883 8.11319 15.5633 8.00819 15.658 7.92031L16.371 7.21982C16.5583 7.03747 16.8126 6.93469 17.0775 6.93481C17.3424 6.93493 17.5966 7.03797 17.7838 7.22055L17.7735 7.19477ZM4.29289 7.19477C4.38529 7.10281 4.4952 7.02962 4.61732 6.97911C4.73944 6.9286 4.8714 6.90175 5.00432 6.90003C5.13723 6.8983 5.27006 6.9217 5.39374 6.96908C5.51743 7.01647 5.62958 7.08686 5.72466 7.17649C5.81974 7.26613 5.89563 7.37241 5.94848 7.48979C6.00133 7.60717 6.03013 7.73324 6.03319 7.8596C6.03624 7.98596 6.01349 8.11303 5.96615 8.23227C5.91881 8.35151 5.84785 8.45948 5.75744 8.55153L5.04443 9.24224C4.94828 9.33397 4.83457 9.4057 4.70894 9.45318C4.58331 9.50067 4.44807 9.52295 4.31172 9.51855C4.1742 9.5226 4.03736 9.499 3.9098 9.44945C3.78223 9.39991 3.66637 9.32547 3.57021 9.23071C3.47405 9.13596 3.39955 9.02344 3.3509 8.90017C3.30225 8.7769 3.28048 8.64534 3.28682 8.51301C3.29316 8.38068 3.32745 8.25143 3.38744 8.13319C3.44742 8.01495 3.5318 7.90978 3.63578 7.82331L4.29289 7.19477ZM19.9393 11.8677C20.2045 11.8677 20.4589 11.9705 20.6464 12.1529C20.8339 12.3353 20.9393 12.5842 20.9393 12.8431C20.9393 13.102 20.8339 13.3509 20.6464 13.5333C20.4589 13.7157 20.2045 13.8185 19.9393 13.8185H18.9393C18.6741 13.8185 18.4197 13.7157 18.2322 13.5333C18.0447 13.3509 17.9393 13.102 17.9393 12.8431C17.9393 12.5842 18.0447 12.3353 18.2322 12.1529C18.4197 11.9705 18.6741 11.8677 18.9393 11.8677H19.9393ZM5.06066 11.8677C5.32589 11.8677 5.58029 11.9705 5.76777 12.1529C5.95525 12.3353 6.06066 12.5842 6.06066 12.8431C6.06066 13.102 5.95525 13.3509 5.76777 13.5333C5.58029 13.7157 5.32589 13.8185 5.06066 13.8185H4.06066C3.79544 13.8185 3.54103 13.7157 3.35355 13.5333C3.16608 13.3509 3.06066 13.102 3.06066 12.8431C3.06066 12.5842 3.16608 12.3353 3.35355 12.1529C3.54103 11.9705 3.79544 11.8677 4.06066 11.8677H5.06066ZM16.0605 16.4089C16.2478 16.5912 16.3532 16.8405 16.3532 17.0996C16.3532 17.3587 16.2478 17.6079 16.0605 17.7906L15.3475 18.4911C15.2539 18.5817 15.1428 18.6533 15.0212 18.7018C14.8996 18.7502 14.7698 18.7746 14.639 18.7738C14.5083 18.773 14.3788 18.7469 14.2578 18.697C14.1369 18.6471 14.0267 18.5741 13.9342 18.4824C13.8416 18.3908 13.7681 18.2819 13.7179 18.1623C13.6677 18.0427 13.6417 17.9147 13.6412 17.7854C13.6408 17.656 13.6659 17.5279 13.7153 17.4079C13.7647 17.2878 13.8375 17.1783 13.9293 17.086L14.6424 16.3855C14.8298 16.2032 15.084 16.1004 15.3489 16.1005C15.6138 16.1006 15.868 16.2037 16.0553 16.3862L16.0605 16.4089ZM7.93954 16.4089C8.12681 16.5913 8.23207 16.8405 8.23194 17.0996C8.23181 17.3587 8.12632 17.6077 7.93887 17.79L7.22585 18.4808C7.04023 18.6799 6.77715 18.7971 6.5 18.8039C6.22264 18.7928 5.9649 18.6743 5.77906 18.4777C5.68433 18.3812 5.60813 18.267 5.5551 18.1414C5.50207 18.0158 5.47321 17.881 5.4701 17.7446C5.467 17.6081 5.48971 17.4724 5.53712 17.3448C5.58453 17.2172 5.65566 17.1001 5.74611 16.9996C5.83656 16.8991 5.94772 16.8177 6.07223 16.7598C6.19675 16.7019 6.33239 16.6686 6.47063 16.6615C6.60888 16.6544 6.74768 16.6737 6.87759 16.7182C7.0075 16.7627 7.12617 16.8318 7.22585 16.9224L7.93954 16.4089ZM12 18.3929C12.2652 18.3929 12.5196 18.4957 12.7071 18.6781C12.8946 18.8605 13 19.1094 13 19.3683V20.3427C13 20.6016 12.8946 20.8505 12.7071 21.0329C12.5196 21.2153 12.2652 21.3181 12 21.3181C11.7348 21.3181 11.4804 21.2153 11.2929 21.0329C11.1054 20.8505 11 20.6016 11 20.3427V19.3683C11 19.1094 11.1054 18.8605 11.2929 18.6781C11.4804 18.4957 11.7348 18.3929 12 18.3929Z" fill="currentColor"/>
        </svg>
      )}
      {theme === 'system' && (
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M20 5.5H4C3.73478 5.5 3.48043 5.60536 3.29289 5.79289C3.10536 5.98043 3 6.23478 3 6.5V15.5C3 15.7652 3.10536 16.0196 3.29289 16.2071C3.48043 16.3946 3.73478 16.5 4 16.5H20C20.2652 16.5 20.5196 16.3946 20.7071 16.2071C20.8946 16.0196 21 15.7652 21 15.5V6.5C21 6.23478 20.8946 5.98043 20.7071 5.79289C20.5196 5.60536 20.2652 5.5 20 5.5ZM19 14.5H5V7.5H19V14.5Z" fill="currentColor"/>
          <path d="M10.5 18.5H13.5V19.5C13.5 19.7652 13.3946 20.0196 13.2071 20.2071C13.0196 20.3946 12.7652 20.5 12.5 20.5H11.5C11.2348 20.5 10.9804 20.3946 10.7929 20.2071C10.6054 20.0196 10.5 19.7652 10.5 19.5V18.5Z" fill="currentColor"/>
        </svg>
      )}
    </button>
  )
} 